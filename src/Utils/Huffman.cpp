#include <STDInclude.hpp>

namespace Utils::Huffman::detail
{
	struct HuffmanNode
	{
		std::uint16_t symbol{};
		std::uint16_t left{};
		std::uint16_t right{};
	};

	inline constexpr std::size_t invalidNode = 999;

	inline constexpr std::array decompressionData
	{
		HuffmanNode{ 0, 999, 999 },
		HuffmanNode{ 1, 999, 999 },
		HuffmanNode{ 2, 999, 999 },
		HuffmanNode{ 3, 999, 999 },
		HuffmanNode{ 4, 999, 999 },
		HuffmanNode{ 5, 999, 999 },
		HuffmanNode{ 6, 999, 999 },
		HuffmanNode{ 7, 999, 999 },
		HuffmanNode{ 8, 999, 999 },
		HuffmanNode{ 9, 999, 999 },
		HuffmanNode{ 10, 999, 999 },
		HuffmanNode{ 11, 999, 999 },
		HuffmanNode{ 12, 999, 999 },
		HuffmanNode{ 13, 999, 999 },
		HuffmanNode{ 14, 999, 999 },
		HuffmanNode{ 15, 999, 999 },
		HuffmanNode{ 16, 999, 999 },
		HuffmanNode{ 17, 999, 999 },
		HuffmanNode{ 18, 999, 999 },
		HuffmanNode{ 19, 999, 999 },
		HuffmanNode{ 20, 999, 999 },
		HuffmanNode{ 21, 999, 999 },
		HuffmanNode{ 22, 999, 999 },
		HuffmanNode{ 23, 999, 999 },
		HuffmanNode{ 24, 999, 999 },
		HuffmanNode{ 25, 999, 999 },
		HuffmanNode{ 26, 999, 999 },
		HuffmanNode{ 27, 999, 999 },
		HuffmanNode{ 28, 999, 999 },
		HuffmanNode{ 29, 999, 999 },
		HuffmanNode{ 30, 999, 999 },
		HuffmanNode{ 31, 999, 999 },
		HuffmanNode{ 32, 999, 999 },
		HuffmanNode{ 33, 999, 999 },
		HuffmanNode{ 34, 999, 999 },
		HuffmanNode{ 35, 999, 999 },
		HuffmanNode{ 36, 999, 999 },
		HuffmanNode{ 37, 999, 999 },
		HuffmanNode{ 38, 999, 999 },
		HuffmanNode{ 39, 999, 999 },
		HuffmanNode{ 40, 999, 999 },
		HuffmanNode{ 41, 999, 999 },
		HuffmanNode{ 42, 999, 999 },
		HuffmanNode{ 43, 999, 999 },
		HuffmanNode{ 44, 999, 999 },
		HuffmanNode{ 45, 999, 999 },
		HuffmanNode{ 46, 999, 999 },
		HuffmanNode{ 47, 999, 999 },
		HuffmanNode{ 48, 999, 999 },
		HuffmanNode{ 49, 999, 999 },
		HuffmanNode{ 50, 999, 999 },
		HuffmanNode{ 51, 999, 999 },
		HuffmanNode{ 52, 999, 999 },
		HuffmanNode{ 53, 999, 999 },
		HuffmanNode{ 54, 999, 999 },
		HuffmanNode{ 55, 999, 999 },
		HuffmanNode{ 56, 999, 999 },
		HuffmanNode{ 57, 999, 999 },
		HuffmanNode{ 58, 999, 999 },
		HuffmanNode{ 59, 999, 999 },
		HuffmanNode{ 60, 999, 999 },
		HuffmanNode{ 61, 999, 999 },
		HuffmanNode{ 62, 999, 999 },
		HuffmanNode{ 63, 999, 999 },
		HuffmanNode{ 64, 999, 999 },
		HuffmanNode{ 65, 999, 999 },
		HuffmanNode{ 66, 999, 999 },
		HuffmanNode{ 67, 999, 999 },
		HuffmanNode{ 68, 999, 999 },
		HuffmanNode{ 69, 999, 999 },
		HuffmanNode{ 70, 999, 999 },
		HuffmanNode{ 71, 999, 999 },
		HuffmanNode{ 72, 999, 999 },
		HuffmanNode{ 73, 999, 999 },
		HuffmanNode{ 74, 999, 999 },
		HuffmanNode{ 75, 999, 999 },
		HuffmanNode{ 76, 999, 999 },
		HuffmanNode{ 77, 999, 999 },
		HuffmanNode{ 78, 999, 999 },
		HuffmanNode{ 79, 999, 999 },
		HuffmanNode{ 80, 999, 999 },
		HuffmanNode{ 81, 999, 999 },
		HuffmanNode{ 82, 999, 999 },
		HuffmanNode{ 83, 999, 999 },
		HuffmanNode{ 84, 999, 999 },
		HuffmanNode{ 85, 999, 999 },
		HuffmanNode{ 86, 999, 999 },
		HuffmanNode{ 87, 999, 999 },
		HuffmanNode{ 88, 999, 999 },
		HuffmanNode{ 89, 999, 999 },
		HuffmanNode{ 90, 999, 999 },
		HuffmanNode{ 91, 999, 999 },
		HuffmanNode{ 92, 999, 999 },
		HuffmanNode{ 93, 999, 999 },
		HuffmanNode{ 94, 999, 999 },
		HuffmanNode{ 95, 999, 999 },
		HuffmanNode{ 96, 999, 999 },
		HuffmanNode{ 97, 999, 999 },
		HuffmanNode{ 98, 999, 999 },
		HuffmanNode{ 99, 999, 999 },
		HuffmanNode{ 100, 999, 999 },
		HuffmanNode{ 101, 999, 999 },
		HuffmanNode{ 102, 999, 999 },
		HuffmanNode{ 103, 999, 999 },
		HuffmanNode{ 104, 999, 999 },
		HuffmanNode{ 105, 999, 999 },
		HuffmanNode{ 106, 999, 999 },
		HuffmanNode{ 107, 999, 999 },
		HuffmanNode{ 108, 999, 999 },
		HuffmanNode{ 109, 999, 999 },
		HuffmanNode{ 110, 999, 999 },
		HuffmanNode{ 111, 999, 999 },
		HuffmanNode{ 112, 999, 999 },
		HuffmanNode{ 113, 999, 999 },
		HuffmanNode{ 114, 999, 999 },
		HuffmanNode{ 115, 999, 999 },
		HuffmanNode{ 116, 999, 999 },
		HuffmanNode{ 117, 999, 999 },
		HuffmanNode{ 118, 999, 999 },
		HuffmanNode{ 119, 999, 999 },
		HuffmanNode{ 120, 999, 999 },
		HuffmanNode{ 121, 999, 999 },
		HuffmanNode{ 122, 999, 999 },
		HuffmanNode{ 123, 999, 999 },
		HuffmanNode{ 124, 999, 999 },
		HuffmanNode{ 125, 999, 999 },
		HuffmanNode{ 126, 999, 999 },
		HuffmanNode{ 127, 999, 999 },
		HuffmanNode{ 128, 999, 999 },
		HuffmanNode{ 129, 999, 999 },
		HuffmanNode{ 130, 999, 999 },
		HuffmanNode{ 131, 999, 999 },
		HuffmanNode{ 132, 999, 999 },
		HuffmanNode{ 133, 999, 999 },
		HuffmanNode{ 134, 999, 999 },
		HuffmanNode{ 135, 999, 999 },
		HuffmanNode{ 136, 999, 999 },
		HuffmanNode{ 137, 999, 999 },
		HuffmanNode{ 138, 999, 999 },
		HuffmanNode{ 139, 999, 999 },
		HuffmanNode{ 140, 999, 999 },
		HuffmanNode{ 141, 999, 999 },
		HuffmanNode{ 142, 999, 999 },
		HuffmanNode{ 143, 999, 999 },
		HuffmanNode{ 144, 999, 999 },
		HuffmanNode{ 145, 999, 999 },
		HuffmanNode{ 146, 999, 999 },
		HuffmanNode{ 147, 999, 999 },
		HuffmanNode{ 148, 999, 999 },
		HuffmanNode{ 149, 999, 999 },
		HuffmanNode{ 150, 999, 999 },
		HuffmanNode{ 151, 999, 999 },
		HuffmanNode{ 152, 999, 999 },
		HuffmanNode{ 153, 999, 999 },
		HuffmanNode{ 154, 999, 999 },
		HuffmanNode{ 155, 999, 999 },
		HuffmanNode{ 156, 999, 999 },
		HuffmanNode{ 157, 999, 999 },
		HuffmanNode{ 158, 999, 999 },
		HuffmanNode{ 159, 999, 999 },
		HuffmanNode{ 160, 999, 999 },
		HuffmanNode{ 161, 999, 999 },
		HuffmanNode{ 162, 999, 999 },
		HuffmanNode{ 163, 999, 999 },
		HuffmanNode{ 164, 999, 999 },
		HuffmanNode{ 165, 999, 999 },
		HuffmanNode{ 166, 999, 999 },
		HuffmanNode{ 167, 999, 999 },
		HuffmanNode{ 168, 999, 999 },
		HuffmanNode{ 169, 999, 999 },
		HuffmanNode{ 170, 999, 999 },
		HuffmanNode{ 171, 999, 999 },
		HuffmanNode{ 172, 999, 999 },
		HuffmanNode{ 173, 999, 999 },
		HuffmanNode{ 174, 999, 999 },
		HuffmanNode{ 175, 999, 999 },
		HuffmanNode{ 176, 999, 999 },
		HuffmanNode{ 177, 999, 999 },
		HuffmanNode{ 178, 999, 999 },
		HuffmanNode{ 179, 999, 999 },
		HuffmanNode{ 180, 999, 999 },
		HuffmanNode{ 181, 999, 999 },
		HuffmanNode{ 182, 999, 999 },
		HuffmanNode{ 183, 999, 999 },
		HuffmanNode{ 184, 999, 999 },
		HuffmanNode{ 185, 999, 999 },
		HuffmanNode{ 186, 999, 999 },
		HuffmanNode{ 187, 999, 999 },
		HuffmanNode{ 188, 999, 999 },
		HuffmanNode{ 189, 999, 999 },
		HuffmanNode{ 190, 999, 999 },
		HuffmanNode{ 191, 999, 999 },
		HuffmanNode{ 192, 999, 999 },
		HuffmanNode{ 193, 999, 999 },
		HuffmanNode{ 194, 999, 999 },
		HuffmanNode{ 195, 999, 999 },
		HuffmanNode{ 196, 999, 999 },
		HuffmanNode{ 197, 999, 999 },
		HuffmanNode{ 198, 999, 999 },
		HuffmanNode{ 199, 999, 999 },
		HuffmanNode{ 200, 999, 999 },
		HuffmanNode{ 201, 999, 999 },
		HuffmanNode{ 202, 999, 999 },
		HuffmanNode{ 203, 999, 999 },
		HuffmanNode{ 204, 999, 999 },
		HuffmanNode{ 205, 999, 999 },
		HuffmanNode{ 206, 999, 999 },
		HuffmanNode{ 207, 999, 999 },
		HuffmanNode{ 208, 999, 999 },
		HuffmanNode{ 209, 999, 999 },
		HuffmanNode{ 210, 999, 999 },
		HuffmanNode{ 211, 999, 999 },
		HuffmanNode{ 212, 999, 999 },
		HuffmanNode{ 213, 999, 999 },
		HuffmanNode{ 214, 999, 999 },
		HuffmanNode{ 215, 999, 999 },
		HuffmanNode{ 216, 999, 999 },
		HuffmanNode{ 217, 999, 999 },
		HuffmanNode{ 218, 999, 999 },
		HuffmanNode{ 219, 999, 999 },
		HuffmanNode{ 220, 999, 999 },
		HuffmanNode{ 221, 999, 999 },
		HuffmanNode{ 222, 999, 999 },
		HuffmanNode{ 223, 999, 999 },
		HuffmanNode{ 224, 999, 999 },
		HuffmanNode{ 225, 999, 999 },
		HuffmanNode{ 226, 999, 999 },
		HuffmanNode{ 227, 999, 999 },
		HuffmanNode{ 228, 999, 999 },
		HuffmanNode{ 229, 999, 999 },
		HuffmanNode{ 230, 999, 999 },
		HuffmanNode{ 231, 999, 999 },
		HuffmanNode{ 232, 999, 999 },
		HuffmanNode{ 233, 999, 999 },
		HuffmanNode{ 234, 999, 999 },
		HuffmanNode{ 235, 999, 999 },
		HuffmanNode{ 236, 999, 999 },
		HuffmanNode{ 237, 999, 999 },
		HuffmanNode{ 238, 999, 999 },
		HuffmanNode{ 239, 999, 999 },
		HuffmanNode{ 240, 999, 999 },
		HuffmanNode{ 241, 999, 999 },
		HuffmanNode{ 242, 999, 999 },
		HuffmanNode{ 243, 999, 999 },
		HuffmanNode{ 244, 999, 999 },
		HuffmanNode{ 245, 999, 999 },
		HuffmanNode{ 246, 999, 999 },
		HuffmanNode{ 247, 999, 999 },
		HuffmanNode{ 248, 999, 999 },
		HuffmanNode{ 249, 999, 999 },
		HuffmanNode{ 250, 999, 999 },
		HuffmanNode{ 251, 999, 999 },
		HuffmanNode{ 252, 999, 999 },
		HuffmanNode{ 253, 999, 999 },
		HuffmanNode{ 254, 999, 999 },
		HuffmanNode{ 255, 999, 999 },
		HuffmanNode{ 256, 999, 999 },
		HuffmanNode{ 999, 256, 183 },
		HuffmanNode{ 999, 257, 215 },
		HuffmanNode{ 999, 187, 205 },
		HuffmanNode{ 999, 181, 189 },
		HuffmanNode{ 999, 219, 185 },
		HuffmanNode{ 999, 94, 218 },
		HuffmanNode{ 999, 157, 203 },
		HuffmanNode{ 999, 179, 93 },
		HuffmanNode{ 999, 213, 123 },
		HuffmanNode{ 999, 155, 220 },
		HuffmanNode{ 999, 186, 221 },
		HuffmanNode{ 999, 206, 209 },
		HuffmanNode{ 999, 217, 243 },
		HuffmanNode{ 999, 238, 230 },
		HuffmanNode{ 999, 214, 237 },
		HuffmanNode{ 999, 107, 141 },
		HuffmanNode{ 999, 154, 163 },
		HuffmanNode{ 999, 169, 59 },
		HuffmanNode{ 999, 175, 229 },
		HuffmanNode{ 999, 158, 207 },
		HuffmanNode{ 999, 227, 223 },
		HuffmanNode{ 999, 225, 119 },
		HuffmanNode{ 999, 180, 173 },
		HuffmanNode{ 999, 211, 170 },
		HuffmanNode{ 999, 174, 222 },
		HuffmanNode{ 999, 149, 201 },
		HuffmanNode{ 999, 202, 190 },
		HuffmanNode{ 999, 242, 171 },
		HuffmanNode{ 999, 188, 167 },
		HuffmanNode{ 999, 91, 247 },
		HuffmanNode{ 999, 249, 156 },
		HuffmanNode{ 999, 151, 245 },
		HuffmanNode{ 999, 161, 239 },
		HuffmanNode{ 999, 241, 231 },
		HuffmanNode{ 999, 111, 150 },
		HuffmanNode{ 999, 121, 142 },
		HuffmanNode{ 999, 126, 235 },
		HuffmanNode{ 999, 103, 35 },
		HuffmanNode{ 999, 162, 125 },
		HuffmanNode{ 999, 106, 210 },
		HuffmanNode{ 999, 139, 118 },
		HuffmanNode{ 999, 87, 70 },
		HuffmanNode{ 999, 166, 177 },
		HuffmanNode{ 999, 204, 226 },
		HuffmanNode{ 999, 165, 89 },
		HuffmanNode{ 999, 61, 92 },
		HuffmanNode{ 999, 234, 184 },
		HuffmanNode{ 999, 122, 246 },
		HuffmanNode{ 999, 178, 147 },
		HuffmanNode{ 999, 47, 182 },
		HuffmanNode{ 999, 258, 117 },
		HuffmanNode{ 999, 39, 110 },
		HuffmanNode{ 999, 251, 109 },
		HuffmanNode{ 999, 143, 83 },
		HuffmanNode{ 999, 233, 77 },
		HuffmanNode{ 999, 60, 86 },
		HuffmanNode{ 999, 81, 85 },
		HuffmanNode{ 999, 191, 228 },
		HuffmanNode{ 999, 62, 137 },
		HuffmanNode{ 999, 199, 138 },
		HuffmanNode{ 999, 58, 71 },
		HuffmanNode{ 999, 145, 46 },
		HuffmanNode{ 999, 140, 153 },
		HuffmanNode{ 999, 212, 124 },
		HuffmanNode{ 999, 236, 244 },
		HuffmanNode{ 999, 115, 259 },
		HuffmanNode{ 999, 45, 260 },
		HuffmanNode{ 999, 250, 79 },
		HuffmanNode{ 999, 164, 120 },
		HuffmanNode{ 999, 159, 27 },
		HuffmanNode{ 999, 134, 261 },
		HuffmanNode{ 999, 43, 197 },
		HuffmanNode{ 999, 172, 198 },
		HuffmanNode{ 999, 146, 105 },
		HuffmanNode{ 999, 78, 84 },
		HuffmanNode{ 999, 42, 262 },
		HuffmanNode{ 999, 38, 41 },
		HuffmanNode{ 999, 99, 44 },
		HuffmanNode{ 999, 133, 194 },
		HuffmanNode{ 999, 23, 263 },
		HuffmanNode{ 999, 253, 104 },
		HuffmanNode{ 999, 37, 30 },
		HuffmanNode{ 999, 75, 264 },
		HuffmanNode{ 999, 152, 168 },
		HuffmanNode{ 999, 82, 265 },
		HuffmanNode{ 999, 26, 195 },
		HuffmanNode{ 999, 266, 74 },
		HuffmanNode{ 999, 73, 267 },
		HuffmanNode{ 999, 132, 240 },
		HuffmanNode{ 999, 268, 22 },
		HuffmanNode{ 999, 269, 208 },
		HuffmanNode{ 999, 98, 270 },
		HuffmanNode{ 999, 55, 116 },
		HuffmanNode{ 999, 102, 114 },
		HuffmanNode{ 999, 271, 196 },
		HuffmanNode{ 999, 19, 11 },
		HuffmanNode{ 999, 272, 273 },
		HuffmanNode{ 999, 33, 274 },
		HuffmanNode{ 999, 25, 232 },
		HuffmanNode{ 999, 275, 88 },
		HuffmanNode{ 999, 276, 200 },
		HuffmanNode{ 999, 277, 28 },
		HuffmanNode{ 999, 278, 57 },
		HuffmanNode{ 999, 279, 252 },
		HuffmanNode{ 999, 101, 280 },
		HuffmanNode{ 999, 31, 281 },
		HuffmanNode{ 999, 90, 95 },
		HuffmanNode{ 999, 282, 283 },
		HuffmanNode{ 999, 284, 216 },
		HuffmanNode{ 999, 67, 148 },
		HuffmanNode{ 999, 285, 286 },
		HuffmanNode{ 999, 287, 288 },
		HuffmanNode{ 999, 65, 289 },
		HuffmanNode{ 999, 290, 51 },
		HuffmanNode{ 999, 130, 291 },
		HuffmanNode{ 999, 292, 108 },
		HuffmanNode{ 999, 136, 36 },
		HuffmanNode{ 999, 293, 248 },
		HuffmanNode{ 999, 294, 295 },
		HuffmanNode{ 999, 296, 193 },
		HuffmanNode{ 999, 56, 297 },
		HuffmanNode{ 999, 76, 298 },
		HuffmanNode{ 999, 299, 72 },
		HuffmanNode{ 999, 300, 301 },
		HuffmanNode{ 999, 302, 54 },
		HuffmanNode{ 999, 224, 303 },
		HuffmanNode{ 999, 254, 304 },
		HuffmanNode{ 999, 18, 24 },
		HuffmanNode{ 999, 53, 305 },
		HuffmanNode{ 999, 176, 306 },
		HuffmanNode{ 999, 144, 17 },
		HuffmanNode{ 999, 307, 308 },
		HuffmanNode{ 999, 21, 309 },
		HuffmanNode{ 999, 127, 310 },
		HuffmanNode{ 999, 15, 311 },
		HuffmanNode{ 999, 14, 312 },
		HuffmanNode{ 999, 68, 63 },
		HuffmanNode{ 999, 313, 314 },
		HuffmanNode{ 999, 66, 315 },
		HuffmanNode{ 999, 13, 40 },
		HuffmanNode{ 999, 316, 317 },
		HuffmanNode{ 999, 318, 319 },
		HuffmanNode{ 999, 131, 320 },
		HuffmanNode{ 999, 52, 20 },
		HuffmanNode{ 999, 321, 29 },
		HuffmanNode{ 999, 322, 135 },
		HuffmanNode{ 999, 323, 324 },
		HuffmanNode{ 999, 325, 96 },
		HuffmanNode{ 999, 326, 100 },
		HuffmanNode{ 999, 327, 328 },
		HuffmanNode{ 999, 329, 69 },
		HuffmanNode{ 999, 330, 34 },
		HuffmanNode{ 999, 331, 129 },
		HuffmanNode{ 999, 332, 333 },
		HuffmanNode{ 999, 334, 335 },
		HuffmanNode{ 999, 336, 80 },
		HuffmanNode{ 999, 337, 12 },
		HuffmanNode{ 999, 338, 10 },
		HuffmanNode{ 999, 339, 340 },
		HuffmanNode{ 999, 97, 341 },
		HuffmanNode{ 999, 342, 343 },
		HuffmanNode{ 999, 344, 9 },
		HuffmanNode{ 999, 345, 346 },
		HuffmanNode{ 999, 347, 348 },
		HuffmanNode{ 999, 349, 350 },
		HuffmanNode{ 999, 351, 160 },
		HuffmanNode{ 999, 352, 353 },
		HuffmanNode{ 999, 354, 355 },
		HuffmanNode{ 999, 356, 357 },
		HuffmanNode{ 999, 358, 113 },
		HuffmanNode{ 999, 359, 50 },
		HuffmanNode{ 999, 360, 361 },
		HuffmanNode{ 999, 49, 362 },
		HuffmanNode{ 999, 363, 16 },
		HuffmanNode{ 999, 364, 192 },
		HuffmanNode{ 999, 365, 366 },
		HuffmanNode{ 999, 367, 368 },
		HuffmanNode{ 999, 369, 370 },
		HuffmanNode{ 999, 371, 372 },
		HuffmanNode{ 999, 373, 374 },
		HuffmanNode{ 999, 375, 376 },
		HuffmanNode{ 999, 377, 378 },
		HuffmanNode{ 999, 379, 380 },
		HuffmanNode{ 999, 112, 381 },
		HuffmanNode{ 999, 382, 383 },
		HuffmanNode{ 999, 384, 385 },
		HuffmanNode{ 999, 386, 387 },
		HuffmanNode{ 999, 388, 389 },
		HuffmanNode{ 999, 390, 391 },
		HuffmanNode{ 999, 392, 393 },
		HuffmanNode{ 999, 394, 8 },
		HuffmanNode{ 999, 395, 396 },
		HuffmanNode{ 999, 397, 398 },
		HuffmanNode{ 999, 399, 7 },
		HuffmanNode{ 999, 400, 401 },
		HuffmanNode{ 999, 402, 403 },
		HuffmanNode{ 999, 404, 405 },
		HuffmanNode{ 999, 406, 407 },
		HuffmanNode{ 999, 408, 409 },
		HuffmanNode{ 999, 410, 411 },
		HuffmanNode{ 999, 412, 413 },
		HuffmanNode{ 999, 414, 415 },
		HuffmanNode{ 999, 416, 417 },
		HuffmanNode{ 999, 418, 419 },
		HuffmanNode{ 999, 420, 421 },
		HuffmanNode{ 999, 48, 422 },
		HuffmanNode{ 999, 423, 5 },
		HuffmanNode{ 999, 424, 425 },
		HuffmanNode{ 999, 426, 64 },
		HuffmanNode{ 999, 427, 428 },
		HuffmanNode{ 999, 429, 430 },
		HuffmanNode{ 999, 431, 6 },
		HuffmanNode{ 999, 432, 433 },
		HuffmanNode{ 999, 434, 435 },
		HuffmanNode{ 999, 4, 436 },
		HuffmanNode{ 999, 2, 437 },
		HuffmanNode{ 999, 438, 439 },
		HuffmanNode{ 999, 440, 441 },
		HuffmanNode{ 999, 442, 443 },
		HuffmanNode{ 999, 444, 445 },
		HuffmanNode{ 999, 446, 447 },
		HuffmanNode{ 999, 448, 128 },
		HuffmanNode{ 999, 3, 449 },
		HuffmanNode{ 999, 450, 451 },
		HuffmanNode{ 999, 32, 452 },
		HuffmanNode{ 999, 453, 454 },
		HuffmanNode{ 999, 455, 456 },
		HuffmanNode{ 999, 457, 458 },
		HuffmanNode{ 999, 255, 459 },
		HuffmanNode{ 999, 460, 1 },
		HuffmanNode{ 999, 461, 462 },
		HuffmanNode{ 999, 463, 464 },
		HuffmanNode{ 999, 465, 466 },
		HuffmanNode{ 999, 467, 468 },
		HuffmanNode{ 999, 469, 470 },
		HuffmanNode{ 999, 471, 472 },
		HuffmanNode{ 999, 473, 474 },
		HuffmanNode{ 999, 475, 476 },
		HuffmanNode{ 999, 477, 478 },
		HuffmanNode{ 999, 479, 480 },
		HuffmanNode{ 999, 481, 482 },
		HuffmanNode{ 999, 483, 484 },
		HuffmanNode{ 999, 485, 486 },
		HuffmanNode{ 999, 487, 488 },
		HuffmanNode{ 999, 489, 490 },
		HuffmanNode{ 999, 491, 492 },
		HuffmanNode{ 999, 493, 494 },
		HuffmanNode{ 999, 495, 496 },
		HuffmanNode{ 999, 497, 498 },
		HuffmanNode{ 999, 499, 500 },
		HuffmanNode{ 999, 501, 502 },
		HuffmanNode{ 999, 503, 504 },
		HuffmanNode{ 999, 505, 0 },
		HuffmanNode{ 999, 506, 507 },
		HuffmanNode{ 999, 508, 509 },
		HuffmanNode{ 999, 510, 511 }
	};

	inline constexpr std::array compressionData
	{
		std::array<std::uint8_t, 12>{ 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 5, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 6, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 11, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 7, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0 },
		std::array<std::uint8_t, 12>{ 10, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 9, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 8, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 },
		std::array<std::uint8_t, 12>{ 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
	};
}

namespace Utils::Huffman
{
	using namespace Utils::Huffman::detail;

	static std::uint8_t IterateTree(std::span<const std::uint8_t> input, std::size_t& inputBitCount)
	{
		std::size_t nodeIndex = decompressionData.size() - 1;

		do {
			const bool rightNode = (input[inputBitCount / 8] >> (inputBitCount % 8)) & 1;
			++inputBitCount;

			nodeIndex = (rightNode) ? decompressionData[nodeIndex].right : decompressionData[nodeIndex].left;
		} while (decompressionData[nodeIndex].symbol == invalidNode);

		assert(("Node index must be equal to symbol value!" && nodeIndex == decompressionData[nodeIndex].symbol));
		return static_cast<std::uint8_t>(decompressionData[nodeIndex].symbol);
	}

	int Decompress(const unsigned char* from, unsigned char* to, int fromSize, int toSize)
	{
		const std::span input(from, fromSize);
		const std::span output(to, toSize);
		int outputByteCount = 0;

		for (std::size_t inputBitCount = 0; inputBitCount < input.size() * 8 && outputByteCount < std::ssize(output); ++outputByteCount) {
			output[outputByteCount] = IterateTree(input, inputBitCount);
		}

		return outputByteCount;
	}

	int Compress(const unsigned char* from, unsigned char* to, int fromSize, int toSize)
	{
		const std::span input(from, fromSize);
		const std::span output(to, toSize);
		int outputBitCount = 0;

		for (const auto byte : input)
		{
			const std::size_t nodeCount = compressionData[byte].front();

			for (std::size_t nodeIndex = 1; nodeIndex < nodeCount + 1; ++nodeIndex)
			{
				if (outputBitCount % 8 == 0) // beginning of a new byte
				{
					output[outputBitCount / 8] = static_cast<std::uint8_t>(compressionData[byte][nodeIndex] << (outputBitCount % 8));
				}
				else
				{
					output[outputBitCount / 8] |= static_cast<std::uint8_t>(compressionData[byte][nodeIndex] << (outputBitCount % 8));
				}

				++outputBitCount;
			}
		};

		return (outputBitCount + 7) / 8;
	}
}
